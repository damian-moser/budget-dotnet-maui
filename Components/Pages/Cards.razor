@page "/cards"
@using budget.Components.Layout
@using MudBlazor
@using budget.Components.Dialogs
@inject IDialogService DialogService
@inject IJSRuntime JsRuntime

<script src="Scripts/main.js" defer></script>

<div style="margin-bottom: 2rem;">
    <MudButton @onclick="NewCard" Variant="Variant.Filled" Color="Color.Warning">Karte hinzufügen</MudButton>
    <MudButton @onclick="NewEinkommen" Variant="Variant.Filled" Color="Color.Warning">Einkommen hinzufügen</MudButton>
</div>
<div class="island-group">
    <div @ref="_card" id="card" class="island d-flex flex-column justify-content-between">
        <div>
            <strong>Vermögen</strong>
            <h2>CHF 6,325.45</h2>
        </div>
        <div class="d-flex gap-2">
            <MudButton @onclick="EditCard" DisableElevation="true" Variant="Variant.Filled" Color="Color.Warning">
                <MudIcon Icon="@Icons.Material.Filled.Edit" />
            </MudButton>
            <MudButton @onclick="RemoveCard" DisableElevation="true" Variant="Variant.Filled" Color="Color.Error">
                <MudIcon Icon="@Icons.Material.Filled.Delete" />
            </MudButton>
        </div>
    </div>
    <div @ref="_cash" id="cash" class="island d-flex flex-column justify-content-between">
        <div>
            <strong>Bargeld</strong>
            <h2>CHF 254.20</h2>
        </div>
        <div class="d-flex gap-2">
            <MudButton @onclick="EditCash" DisableElevation="true" Variant="Variant.Filled" Color="Color.Warning">
                <MudIcon Icon="@Icons.Material.Filled.Edit" />
            </MudButton>
            <MudButton @onclick="RemoveCash" DisableElevation="true" Variant="Variant.Filled" Color="Color.Error">
                <MudIcon Icon="@Icons.Material.Filled.Delete" />
            </MudButton>
        </div>
    </div>
    <div @ref="_einkommen" id="einkommen" class="island d-flex flex-column justify-content-between">
        <div>
            <strong>Einkommen</strong>
            <h2>CHF 425.00</h2>
        </div>
        <div class="d-flex gap-2">
            <MudButton @onclick="EditEinkommen" DisableElevation="true" Variant="Variant.Filled" Color="Color.Warning">
                <MudIcon Icon="@Icons.Material.Filled.Edit" />
            </MudButton>
            <MudButton @onclick="RemoveEinkommen" DisableElevation="true" Variant="Variant.Filled" Color="Color.Error">
                <MudIcon Icon="@Icons.Material.Filled.Delete" />
            </MudButton>
        </div>
    </div>
</div>

@code {
    [CascadingParameter] public MainLayout? Layout { get; set; }

    protected override void OnInitialized() {
        if (Layout != null) {
            Layout.Title = "Karten";
        }
    }

    DialogOptions _options = new DialogOptions {
        CloseOnEscapeKey = true,
        DisableBackdropClick = true
    };

    private void NewEinkommen() {
        DialogService.Show<NewEinkommen>("Neues Einkommen hinzufügen", _options);
    }
    
    private void EditEinkommen() {
        DialogService.Show<EditEinkommen>("Einkommen bearbeiten", _options);
    }

    private void NewCard() {
        DialogService.Show<NewCard>("Neue Karte hinzufügen", _options);
    }
    
    private void EditCard() {
        DialogService.Show<EditCard>("Karte bearbeiten", _options);
    }
    
    private void EditCash() {
        DialogService.Show<EditCash>("Bargeld Betrag anpassen", _options);
    }

    ElementReference _cash;
    private async void RemoveCash() {
        await JsRuntime.InvokeVoidAsync("removeElement", _cash);
    }
    
    ElementReference _card;
    private async void RemoveCard() {
        await JsRuntime.InvokeVoidAsync("removeElement", _card);
    }

    ElementReference _einkommen;
    private async void RemoveEinkommen() {
        await JsRuntime.InvokeVoidAsync("removeElement", _einkommen);
    }
}
